CREATE TABLE jeton_rafraichissements (
   identifiant_utilisateur VARCHAR2(50),
   jeton VARCHAR2(150) NOT NULL,
   PRIMARY KEY(identifiant_utilisateur),
   CONSTRAINT unique_jeton UNIQUE(jeton)
);

CREATE TABLE roles (
   id NUMBER,
   nom VARCHAR2(50) NOT NULL,
   niveau NUMBER NOT NULL,
   PRIMARY KEY(id),
   CONSTRAINT unique_nom_role UNIQUE(nom)
);

CREATE TABLE utilisateurs (
   id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
   id_role NUMBER NOT NULL,
   nom VARCHAR2(50) NOT NULL,
   prenom VARCHAR2(50),
   contact CHAR(10) NOT NULL,
   identifiant VARCHAR2(50) NOT NULL,
   mot_de_passe VARCHAR2(150) NOT NULL,
   search_column VARCHAR2(110), -- For full text search
   PRIMARY KEY(id),
   CONSTRAINT unique_contact_utilisateur UNIQUE(contact),
   CONSTRAINT unique_identifiant_utilisateur UNIQUE(identifiant),
   FOREIGN KEY(id_role) REFERENCES roles(id)
);

CREATE TABLE type_elections (
   id NUMBER,
   nom VARCHAR2(50) UNIQUE NOT NULL,
   PRIMARY KEY(id)
);

CREATE TABLE elections (
   id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
   id_type_election NUMBER NOT NULL,
   nom VARCHAR2(50) UNIQUE NOT NULL,
   date_debut DATE NOT NULL,
   date_fin DATE,
   etat NUMBER NOT NULL, -- 0: en cours, 20: cloturé
   PRIMARY KEY(id),
   FOREIGN KEY(id_type_election) REFERENCES type_elections(id)
);

CREATE TABLE resultats (
   id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
   id_election NUMBER NOT NULL,
   id_bv NUMBER NOT NULL,
   inscrits NUMBER NOT NULL,
   -- Enregistré = moins_36 + 36_plus
   homme_moins_36 NUMBER NOT NULL,
   femme_moins_36 NUMBER NOT NULL,
   homme_36_plus NUMBER NOT NULL,
   femme_36_plus NUMBER NOT NULL,
   handicapes NUMBER NOT NULL,
   malvoyants NUMBER NOT NULL,
   blancs NUMBER NOT NULL,
   nuls NUMBER NOT NULL,
   etat NUMBER NOT NULL, -- 0: en attente, 20: cloturé
   importe NUMBER NOT NULL,  -- 0: via application, 1: importé
   PRIMARY KEY(id),
   FOREIGN KEY(id_election) REFERENCES elections(id),
   FOREIGN KEY(id_bv) REFERENCES bv(id),
   CONSTRAINT unique_resultat UNIQUE(id_election, id_bv),
   CHECK (
      homme_moins_36 >= 0 AND
      femme_moins_36 >= 0 AND
      homme_36_plus >= 0 AND
      femme_36_plus >= 0 AND
      handicapes >= 0 AND
      malvoyants >= 0 AND
      blancs >= 0 AND
      nuls >= 0 AND
      importe BETWEEN 0 AND 1
   ),
   CHECK (
      homme_moins_36 + femme_moins_36 + homme_36_plus + femme_36_plus <= inscrits
   ),
   CHECK (
      handicapes BETWEEN 0 AND homme_moins_36 + femme_moins_36 + homme_36_plus + femme_36_plus AND
      malvoyants BETWEEN 0 AND homme_moins_36 + femme_moins_36 + homme_36_plus + femme_36_plus
   ),
   CHECK (
      blancs + nuls <= homme_moins_36 + femme_moins_36 + homme_36_plus + femme_36_plus
   )
);

CREATE TABLE resultat_images (
   id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
   id_resultat NUMBER NOT NULL,
   chemin_image VARCHAR2(150) NOT NULL,
   PRIMARY KEY(id),
   FOREIGN KEY(id_resultat) REFERENCES resultats(id),
   CONSTRAINT uq_resultat_image UNIQUE(id_resultat, chemin_image)
);

CREATE TABLE resultats_importes (
   id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
   code_bv CHAR(12) NOT NULL,
   id_election NUMBER NOT NULL,
   inscrits NUMBER NOT NULL,
   homme_moins_36 NUMBER NOT NULL,
   femme_moins_36 NUMBER NOT NULL,
   homme_36_plus NUMBER NOT NULL,
   femme_36_plus NUMBER NOT NULL,
   handicapes NUMBER NOT NULL,
   malvoyants NUMBER NOT NULL,
   blancs NUMBER NOT NULL,
   nuls NUMBER NOT NULL,
   PRIMARY KEY(id),
   CONSTRAINT uq_resultat_importe UNIQUE(code_bv, id_election),
   FOREIGN KEY(id_election) REFERENCES elections(id),
   CHECK (
      homme_moins_36 >= 0 AND
      femme_moins_36 >= 0 AND
      homme_36_plus >= 0 AND
      femme_36_plus >= 0 AND
      handicapes >= 0 AND
      malvoyants >= 0 AND
      blancs >= 0 AND
      nuls >= 0
   ),
   CHECK (
      homme_moins_36 + femme_moins_36 + homme_36_plus + femme_36_plus <= inscrits
   ),
   CHECK (
      handicapes BETWEEN 0 AND homme_moins_36 + femme_moins_36 + homme_36_plus + femme_36_plus AND
      malvoyants BETWEEN 0 AND homme_moins_36 + femme_moins_36 + homme_36_plus + femme_36_plus
   ),
   CHECK (
      blancs + nuls <= homme_moins_36 + femme_moins_36 + homme_36_plus + femme_36_plus
   )
);

CREATE TABLE details_resultats_importes (
   id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
   code_bv CHAR(12) NOT NULL,
   id_election NUMBER NOT NULL,
   numero_candidat NUMBER NOT NULL,
   voix NUMBER NOT NULL,
   FOREIGN KEY(id_election) REFERENCES elections(id),
   CONSTRAINT uq_detail_resultat_importe UNIQUE(code_bv, id_election, numero_candidat),
   CHECK (voix >= 0)
);

CREATE TABLE resultat_images_importes (
   id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
   code_bv CHAR(12) NOT NULL,
   id_election NUMBER NOT NULL,
   chemin_image VARCHAR2(150) NOT NULL,
   PRIMARY KEY(id),
   FOREIGN KEY(id_election) REFERENCES elections(id),
   CONSTRAINT uq_resultat_image_importe UNIQUE(code_bv, id_election, chemin_image)
);

CREATE TABLE type_alertes (
   id NUMBER,
   nom VARCHAR2(50) UNIQUE NOT NULL,
   niveau NUMBER NOT NULL,
   PRIMARY KEY(id)
);

CREATE TABLE alertes (
   id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
   id_type_alerte NUMBER NOT NULL,
   id_election NUMBER NOT NULL,
   id_bv NUMBER NOT NULL,
   date_alerte DATE NOT NULL,
   description VARCHAR2(200) NOT NULL,
   etat NUMBER NOT NULL, -- 0: en attente, 10: en cours, 20: cloturé
   PRIMARY KEY(id),
   FOREIGN KEY(id_type_alerte) REFERENCES type_alertes(id),
   FOREIGN KEY(id_election) REFERENCES elections(id),
   FOREIGN KEY(id_bv) REFERENCES bv(id),
   CONSTRAINT unique_alerte UNIQUE(id_type_alerte, id_election, id_bv)
);

CREATE TABLE alertes_importees (
   id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
   id_type_alerte NUMBER NOT NULL,
   id_election NUMBER NOT NULL,
   code_bv CHAR(12) NOT NULL,
   date_alerte DATE NOT NULL,
   description VARCHAR2(200) NOT NULL,
   etat NUMBER NOT NULL, -- 0: en attente, 10: en cours, 20: cloturé
   PRIMARY KEY(id),
   FOREIGN KEY(id_type_alerte) REFERENCES type_alertes(id),
   FOREIGN KEY(id_election) REFERENCES elections(id),
   CONSTRAINT unique_alerte_importe UNIQUE(id_type_alerte, id_election, code_bv)
);