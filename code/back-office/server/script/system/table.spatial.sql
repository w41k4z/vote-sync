CREATE TABLE provinces (
    id CHAR(1),
    nom VARCHAR2(12) NOT NULL,
    etat NUMBER NOT NULL,
    PRIMARY KEY(id),
    CONSTRAINT unique_nom_province UNIQUE(nom)
);

CREATE TABLE regions (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    code CHAR(2) UNIQUE NOT NULL,
    id_province CHAR(1) NOT NULL,
    nom VARCHAR2(50) UNIQUE NOT NULL,
    geojson CLOB,
    etat NUMBER NOT NULL,
    PRIMARY KEY(id),
    FOREIGN KEY(id_province) REFERENCES provinces(id)
);

CREATE TABLE districts (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    code CHAR(4) UNIQUE NOT NULL,
    id_region NUMBER NOT NULL,
    nom VARCHAR2(50) UNIQUE NOT NULL,
    geojson CLOB,
    etat NUMBER NOT NULL,
    PRIMARY KEY(id),
    FOREIGN KEY(id_region) REFERENCES regions(id)
);

-- For result purposes only
-- municipalities are the same as communes, 
-- except for Antananarivo Renivohitra which regroups all the 6 arrondissements
CREATE TABLE municipalites (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    id_district NUMBER NOT NULL, -- district id of the first groupment that forms the municipality, or the same district as the commune
    nom_district VARCHAR2(50) NOT NULL,
    code CHAR(6) UNIQUE NOT NULL,
    nom VARCHAR2(50) UNIQUE NOT NULL,
    geojson CLOB,
    PRIMARY KEY(id),
    FOREIGN KEY(id_district) REFERENCES districts(id)
);

CREATE TABLE communes (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    -- id_municipalite = id sauf pour Antananarivo Renivohitra 
    -- (les 8 arrondissements, prennant l'id du premier arrondissement)
    id_municipalite NUMBER NOT NULL, 
    code CHAR(6) UNIQUE NOT NULL,
    id_district NUMBER NOT NULL,
    nom VARCHAR2(50) UNIQUE NOT NULL,
    geojson CLOB,
    etat NUMBER NOT NULL,
    PRIMARY KEY(id),
    FOREIGN KEY(id_municipalite) REFERENCES municipalites(id),
    FOREIGN KEY(id_district) REFERENCES districts(id)
);

CREATE TABLE fokontany (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    code CHAR(8) UNIQUE NOT NULL,
    id_commune NUMBER NOT NULL,
    nom VARCHAR2(50) UNIQUE NOT NULL,
    geojson CLOB,
    etat NUMBER NOT NULL,
    PRIMARY KEY(id),
    FOREIGN KEY(id_commune) REFERENCES communes(id)
);

CREATE TABLE cv (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    code CHAR(10) UNIQUE NOT NULL,
    id_fokontany NUMBER NOT NULL,
    nom VARCHAR2(50) UNIQUE NOT NULL,
    localisation SDO_GEOMETRY,
    etat NUMBER NOT NULL,
    PRIMARY KEY(id),
    FOREIGN KEY(id_fokontany) REFERENCES fokontany(id)
);
INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID)
VALUES (
    'CV',                   -- The name of your table
    'LOCALISATION',         -- The name of the geometry column
    SDO_DIM_ARRAY(          -- The dimensional information for the geometry
        SDO_DIM_ELEMENT('X', -180, 180, 0.05),  -- X dimension (Longitude)
        SDO_DIM_ELEMENT('Y', -90, 90, 0.05)     -- Y dimension (Latitude)
    ),
    4326                    -- The SRID (Spatial Reference ID)
);
CREATE INDEX idx_cv_localisation ON cv(localisation) INDEXTYPE IS MDSYS.SPATIAL_INDEX;

CREATE TABLE bv (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    code CHAR(12) UNIQUE NOT NULL,
    id_cv NUMBER NOT NULL,
    nom VARCHAR2(50) UNIQUE NOT NULL,
    id_operateur_validateur NUMBER,
    etat NUMBER NOT NULL,
    PRIMARY KEY(id),
    FOREIGN KEY(id_cv) REFERENCES cv(id),
    FOREIGN KEY(id_operateur_validateur) REFERENCES utilisateurs(id)
);